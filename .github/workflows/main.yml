name: Python package

# Run on all pushes, releases, and manual triggers; don't include PRs because
# then everything runs twice (push and PR)
# Push also includes manual tagged pushes to master that are how we have been
# doing releases
on: [push, release, workflow_dispatch]

jobs:
  review:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.6]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('*requirements.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run tox
        # Run all tox targets; if we had more python versions we'd need
        # 'tox -e py' to pick up the current python version from the matrix,
        # and then separate commands (restricted to one python version) for
        # the docs and manifest
        run: tox

  build_and_publish:
    needs: review
    runs-on: ubuntu-18.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build --sdist --wheel --outdir dist/ .
      - name: Publish package
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
